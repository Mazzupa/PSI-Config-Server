server:
  port: 8765

# ==============================================================
# = Actuator Properties
# ==============================================================
management:
  endpoints:
    web:
      exposure:
        include: health,info,httptrace,refresh,bus-refresh,shutdown,routes,filters
  endpoint:
    health:
      show-details: when_authorized
    shutdown:
      enabled: true
# Metodo POST con url: /actuator/refresh
# Metodo POST con url: /actuator/bus-refresh
# Metodo POST con url: /actuator/shutdown
# Metodo GET con url:  /actuator/routes?format=details
# Metodo GET con url:  /actuator/filters
# Metodo POST con url: /actuator/routes

logging:
  level:
    org.springframework.security: DEBUG

eureka:
  instance:
    #intervallo di attesa prima della rimozione del servizio (def 90 sec)
    lease-expiration-duration-in-seconds: 90 
    #intervallo di invio dell'heartbeat (def 30 sec)
    leaseRenewalIntervalInSeconds: 30
    #id di identificazione dell'istanza
    instanceId: ${spring.application.name}-1
    #registrazione per indirizzo ip (defualt hostname)
    preferIpAddress: true
  client:
   registerWithEureka: true
   fetchRegistry: true
   serviceUrl:
     defaultZone: http://localhost:8761/eureka/

# ==============================================================
# = sicurezza Properties
# ==============================================================
#sicurezza:
#  uri: /auth/**
#  header: Authorization
#  prefix: Bearer
#  expiration: 86400
#  secret: 123_Stella
#  filter
#  security
#  ZuulApplication.java

spring:
  rabbitmq:
   host: ${remotesrv}
   port: 5672
   username: guest
   password: guest
  zipkin:
    baseUrl: http://${remotesrv}:9411/
    sender:
      type: web
  sleuth:
    sampler:
      probability: 1.0
    traceId128: false
  devtools:
    restart:
      log-condition-evaluation-delta: false